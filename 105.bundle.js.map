{"version":3,"file":"105.bundle.js","mappings":"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","sources":["webpack://webpack-react-typescript-scss/./src/components/Checkbox/Checkbox.tsx","webpack://webpack-react-typescript-scss/./src/components/Dropdown/Dropdown.tsx","webpack://webpack-react-typescript-scss/./src/components/Input/Input.tsx","webpack://webpack-react-typescript-scss/./src/pages/VendorsPage/VendorsPage.tsx","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport './Checkbox.scss';\n\ntype Props = {\n  title: string;\n  isHidden?: boolean;\n  checked: boolean;\n  hasError?: boolean;\n  onChange: () => void;\n};\n\nexport const Checkbox: React.FC<Props> = ({\n  title,\n  isHidden = false,\n  checked,\n  hasError,\n  onChange,\n}) => {\n  const isCheckboxHidden = isHidden && !checked;\n\n  return (\n    <label\n      className={classNames('checkbox', {\n        'checkbox--hidden': isCheckboxHidden,\n        'checkbox--error': hasError,\n      })}\n    >\n      <input\n        className=\"checkbox__input\"\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n      />\n\n      <div className=\"checkbox__content\">{title}</div>\n    </label>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-len */\nimport { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport './Dropdown.scss';\n\ntype Props = {\n  options: string[];\n  selectedOption: string;\n  onSelect: (value: any) => void;\n  className?: string;\n  contentClassName?: string;\n  hasError?: boolean;\n};\n\nexport const Dropdown: React.FC<Props> = ({\n  options,\n  selectedOption,\n  onSelect,\n  className = '',\n  contentClassName = '',\n  hasError,\n}) => {\n  const [isActive, setIsActive] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setIsActive(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div\n      className={classNames('dropdown', {\n        'dropdown--active': isActive,\n        'dropdown--error': hasError,\n      })}\n      ref={dropdownRef}\n    >\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsActive(!isActive);\n        }}\n        className={classNames('dropdown__btn', {\n          [className]: className,\n        })}\n      >\n        <span className=\"dropdown__btn-text\">{selectedOption}</span>\n\n        <svg\n          className={classNames('dropdown__svg', {\n            'dropdown__svg--active': isActive,\n          })}\n          width=\"14\"\n          height=\"9\"\n          viewBox=\"0 0 14 9\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M1 1.5L7 7.5L13 1.5\"\n            stroke=\"#036\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n          />\n        </svg>\n      </button>\n      <ul\n        className={classNames('dropdown__content', {\n          [contentClassName]: contentClassName,\n        })}\n        style={{ display: isActive ? 'flex' : 'none' }}\n      >\n        {options.map(item => (\n          <button\n            key={item}\n            type=\"button\"\n            className=\"dropdown__item\"\n            onClick={() => {\n              setIsActive(false);\n              onSelect(item);\n            }}\n          >\n            {item}\n          </button>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport './Input.scss';\n\ntype Props = {\n  name: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  hasError?: boolean;\n  type?: string;\n  classname?: string;\n};\n\nexport const Input: React.FC<Props> = ({\n  name,\n  value,\n  onChange,\n  hasError,\n  placeholder = '',\n  type = 'text',\n  classname = '',\n}) => {\n  return (\n    <input\n      name={name}\n      value={value}\n      onChange={onChange}\n      type={type}\n      className={classNames('input', {\n        'input--error': hasError,\n        [classname]: classname,\n      })}\n      placeholder={placeholder}\n    />\n  );\n};\n","/* eslint-disable max-len */\nimport { useRef, useState } from 'react';\nimport { Container } from '../../components/Container/Container';\nimport { useAppSelector } from '../../store/hooks';\nimport './VendorsPage.scss';\nimport { Checkbox } from '../../components/Checkbox/Checkbox';\nimport { Input } from '../../components/Input/Input';\nimport { Dropdown } from '../../components/Dropdown/Dropdown';\nimport { Modal } from '../../components/Modal/Modal';\nimport { Link } from 'react-router-dom';\n\nconst VendorsPage: React.FC = () => {\n  const regionsFromServer = useAppSelector(state => state.regions.regions);\n  const regionsValues = regionsFromServer.map(reg => reg.name);\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [isModalShown, setIsModalShown] = useState(false);\n  const otherInput = useRef<HTMLInputElement | null>(null);\n\n  const categoriesFromServer = useAppSelector(\n    state => state.categories.categories,\n  );\n\n  const toggleCategory = (name: string) => {\n    if (selectedCategories.includes(name)) {\n      setSelectedCategories(prev => prev.filter(cat => cat !== name));\n    } else {\n      setSelectedCategories(prev => [...prev, name]);\n    }\n  };\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [comment, setComment] = useState('');\n  const [region, setRegion] = useState('Оберіть область');\n\n  const clearForm = () => {\n    setComment('');\n    setPhone('');\n    setEmail('');\n    setName('');\n    setSelectedCategories([]);\n    setRegion('Оберіть область');\n  };\n\n  const [isNameValid, setIsNameValid] = useState(true);\n  const [isPhoneValid, setIsPhoneValid] = useState(true);\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  const [isCategoryValid, setIsCategoryValid] = useState(true);\n  const [isRegionValid, setIsRegionValid] = useState(true);\n\n  const hasError =\n    !isNameValid ||\n    !isPhoneValid ||\n    !isEmailValid ||\n    !isCategoryValid ||\n    !isRegionValid;\n\n  const validateFields = () => {\n    if (name.length < 2 || name.length > 32) {\n      setIsNameValid(false);\n    } else {\n      setIsNameValid(true);\n    }\n\n    if (!/^\\+?3?8?(0\\d{9})$/.test(phone)) {\n      setIsPhoneValid(false);\n    } else {\n      setIsPhoneValid(true);\n    }\n\n    if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email)) {\n      setIsEmailValid(false);\n    } else {\n      setIsEmailValid(true);\n    }\n\n    if (selectedCategories.length === 0) {\n      setIsCategoryValid(false);\n    } else {\n      setIsCategoryValid(true);\n    }\n\n    if (!regionsValues.includes(region)) {\n      setIsRegionValid(false);\n    } else {\n      setIsRegionValid(true);\n    }\n  };\n\n  const handleFormSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    validateFields();\n\n    if (\n      !(name.length < 2 || name.length > 32) &&\n      /^\\+?3?8?(0\\d{9})$/.test(phone) &&\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/.test(email) &&\n      !(selectedCategories.length === 0) &&\n      regionsValues.includes(region)\n    ) {\n      clearForm();\n      setIsModalShown(true);\n    }\n  };\n\n  return (\n    <div className=\"vendors\">\n      <div className=\"vendors__header\">\n        <Container>\n          <h2 className=\"vendors__title\">\n            ВИ - КРАФТОВИЙ ВИРОБНИК АЛКОГОЛЬНИХ НАПОЇВ В УКРАЇНІ?\n          </h2>\n          <p className=\"vendors__subtitle\">\n            ВАРИТЕ СМАЧНЕ ТА ЯКІСНЕ? ПИШАЄТЕСЯ СВОЇМ ПРОДУКТОМ?\n          </p>\n          <p className=\"vendors__text\">\n            Розміщуйте свої товари у КОРЧМІ та просувайте себе, як вітчизняного\n            виробника.\n          </p>\n        </Container>\n      </div>\n\n      <div className=\"vendors__content\">\n        <Container>\n          <h2 className=\"vendors__content-title\">\n            ЗаповнюйТЕ форму І МИ ЗВ’ЯЖЕМОСЬ З ВАШИМ ВИРОБНИЦТВОМ\n          </h2>\n\n          <form className=\"vendors__form\" onSubmit={handleFormSubmit}>\n            <fieldset className=\"vendors__form-group vendors__form-group--contacts\">\n              <legend className=\"vendors__form-title\">\n                Як з вами сконтактувати?\n              </legend>\n\n              <div className=\"vendors__fields-group\">\n                <label className=\"vendors__form-field\">\n                  <span className=\"vendors__form-text\">\n                    Вкажіть назву вашого виробництва{' '}\n                    <span className=\"vendors__star\">*</span>\n                  </span>\n\n                  <Input\n                    value={name}\n                    onChange={e => {\n                      setName(e.target.value);\n                      setIsNameValid(true);\n                    }}\n                    name=\"name\"\n                    placeholder=\"Чізай...\"\n                    hasError={!isNameValid}\n                  />\n                </label>\n\n                <label className=\"vendors__form-field\">\n                  <span className=\"vendors__form-text\">\n                    Вкажіть номер телефону для зв’язку з вашим виробництвом{' '}\n                    <span className=\"vendors__star\">*</span>\n                  </span>\n\n                  <Input\n                    value={phone}\n                    onChange={e => {\n                      setPhone(e.target.value);\n                      setIsPhoneValid(true);\n                    }}\n                    name=\"phone\"\n                    placeholder=\"067 567 87 87\"\n                    hasError={!isPhoneValid}\n                  />\n                </label>\n\n                <label className=\"vendors__form-field\">\n                  <span className=\"vendors__form-text\">\n                    Вкажіть e-mail для зв’язку з вашим виробництвом{' '}\n                    <span className=\"vendors__star\">*</span>\n                  </span>\n\n                  <Input\n                    value={email}\n                    onChange={e => {\n                      setEmail(e.target.value);\n                      setIsEmailValid(true);\n                    }}\n                    name=\"email\"\n                    placeholder=\"****@gmail.com\"\n                    type=\"text\"\n                    hasError={!isEmailValid}\n                  />\n                </label>\n              </div>\n            </fieldset>\n\n            <fieldset className=\"vendors__form-group vendors__form-group--about\">\n              <legend className=\"vendors__form-title\">\n                Розкажіть про ваше виробництво\n              </legend>\n\n              <div className=\"vendors__fields-group\">\n                <div className=\"vendors__form-field\">\n                  <span className=\"vendors__form-text\">\n                    В якій області знаходиться ваше виробництво?{' '}\n                    <span className=\"vendors__star\">*</span>\n                  </span>\n\n                  <Dropdown\n                    className=\"vendors__dropdown\"\n                    contentClassName=\"vendors__dropdown-content\"\n                    options={regionsValues}\n                    selectedOption={region}\n                    onSelect={value => {\n                      setRegion(value);\n                      setIsRegionValid(true);\n                    }}\n                    hasError={!isRegionValid}\n                  />\n                </div>\n\n                <div className=\"vendors__form-field\">\n                  <span className=\"vendors__form-text\">\n                    Що ви виготовляєте? <span className=\"vendors__star\">*</span>\n                  </span>\n                  <div className=\"vendors__checkboxes\">\n                    {categoriesFromServer.map(cat => (\n                      <Checkbox\n                        title={cat.name}\n                        key={cat.id}\n                        checked={selectedCategories.includes(cat.name)}\n                        onChange={() => {\n                          toggleCategory(cat.name);\n                          setIsCategoryValid(true);\n                        }}\n                        hasError={!isCategoryValid}\n                      />\n                    ))}\n\n                    <Checkbox\n                      title={'Інше'}\n                      checked={selectedCategories.includes('Інше')}\n                      onChange={() => {\n                        toggleCategory('Інше');\n                        setIsCategoryValid(true);\n\n                        if (!selectedCategories.includes('Інше')) {\n                          setTimeout(() => {\n                            otherInput.current?.focus();\n                          }, 0);\n                        }\n                      }}\n                      hasError={!isCategoryValid}\n                    />\n\n                    <input\n                      type=\"text\"\n                      className=\"vendors__other\"\n                      hidden={!selectedCategories.includes('Інше')}\n                      placeholder=\"Уточніть, що ви виготовляєте...\"\n                      ref={otherInput}\n                    />\n                  </div>\n                </div>\n\n                <label className=\"vendors__form-field\">\n                  <span className=\"vendors__form-text\">Коментарі</span>\n                  <textarea\n                    className=\"vendors__form-textarea\"\n                    placeholder=\"Напиши нам...\"\n                    value={comment}\n                    onChange={e => setComment(e.target.value)}\n                  />\n                </label>\n              </div>\n            </fieldset>\n\n            <div className=\"vendors__submit\">\n              {hasError && (\n                <p className=\"vendors__error-message\">\n                  Заповніть всі поля позначені зірочкою (*)\n                </p>\n              )}\n\n              <button className=\"vendors__btn\">\n                Надіслати дані про ваше виробництво\n              </button>\n            </div>\n          </form>\n        </Container>\n\n        {isModalShown && (\n          <Modal onClickOutside={() => setIsModalShown(false)}>\n            <section className=\"vendors__modal\">\n              <h2 className=\"vendors__modal-title\">ДЯКУЄМО!</h2>\n              <p className=\"vendors__modal-text\">\n                Ми сконтактуємо з вами протягом 3 робочих днів\n              </p>\n              <Link\n                to=\"/\"\n                className=\"vendors__modal-btn\"\n                onClick={() => setIsModalShown(false)}\n              >\n                На головну\n              </Link>\n            </section>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VendorsPage;\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Checkbox","_ref","title","_ref$isHidden","isHidden","checked","hasError","onChange","isCheckboxHidden","_jsxs","className","classNames","children","_jsx","type","Dropdown","options","selectedOption","onSelect","_ref$className","_ref$contentClassName","contentClassName","_useState","useState","_useState2","_slicedToArray","isActive","setIsActive","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","onClick","_defineProperty","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","style","display","map","item","Input","name","value","_ref$placeholder","placeholder","_ref$type","_ref$classname","classname","regionsValues","useAppSelector","state","regions","reg","selectedCategories","setSelectedCategories","_useState3","_useState4","isModalShown","setIsModalShown","otherInput","categoriesFromServer","categories","toggleCategory","includes","prev","filter","cat","concat","_toConsumableArray","_useState5","_useState6","setName","_useState7","_useState8","phone","setPhone","_useState9","_useState10","email","setEmail","_useState11","_useState12","comment","setComment","_useState13","_useState14","region","setRegion","_useState15","_useState16","isNameValid","setIsNameValid","_useState17","_useState18","isPhoneValid","setIsPhoneValid","_useState19","_useState20","isEmailValid","setIsEmailValid","_useState21","_useState22","isCategoryValid","setIsCategoryValid","_useState23","_useState24","isRegionValid","setIsRegionValid","Container","onSubmit","e","preventDefault","length","test","id","setTimeout","_otherInput$current","focus","hidden","Modal","onClickOutside","Link","to","_typeof","o","Symbol","iterator","constructor","prototype","obj","key","i","t","r","toPrimitive","call","TypeError","String","Object","defineProperty","enumerable","configurable","writable","arr","Array","isArray","arrayLikeToArray","iter","from","unsupportedIterableToArray"],"sourceRoot":""}