{"version":3,"file":"332.bundle.js","mappings":"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","sources":["webpack://webpack-react-typescript-scss/./src/components/Checkbox/Checkbox.tsx","webpack://webpack-react-typescript-scss/./src/components/Dropdown/Dropdown.tsx","webpack://webpack-react-typescript-scss/./src/components/Pagination/Pagination.tsx","webpack://webpack-react-typescript-scss/./src/components/CheckboxVendor/CheckboxVendor.tsx","webpack://webpack-react-typescript-scss/./src/types/sortValues.ts","webpack://webpack-react-typescript-scss/./src/pages/CatalogPage/CatalogPage.tsx","webpack://webpack-react-typescript-scss/./src/utils/getSearchWith.ts","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://webpack-react-typescript-scss/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport './Checkbox.scss';\n\ntype Props = {\n  title: string;\n  isHidden?: boolean;\n  checked: boolean;\n  hasError?: boolean;\n  onChange: () => void;\n};\n\nexport const Checkbox: React.FC<Props> = ({\n  title,\n  isHidden = false,\n  checked,\n  hasError,\n  onChange,\n}) => {\n  const isCheckboxHidden = isHidden && !checked;\n\n  return (\n    <label\n      className={classNames('checkbox', {\n        'checkbox--hidden': isCheckboxHidden,\n        'checkbox--error': hasError,\n      })}\n    >\n      <input\n        className=\"checkbox__input\"\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onChange}\n      />\n\n      <div className=\"checkbox__content\">{title}</div>\n    </label>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-len */\nimport { useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport './Dropdown.scss';\n\ntype Props = {\n  options: string[];\n  selectedOption: string;\n  onSelect: (value: any) => void;\n  className?: string;\n  contentClassName?: string;\n  hasError?: boolean;\n};\n\nexport const Dropdown: React.FC<Props> = ({\n  options,\n  selectedOption,\n  onSelect,\n  className = '',\n  contentClassName = '',\n  hasError,\n}) => {\n  const [isActive, setIsActive] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setIsActive(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div\n      className={classNames('dropdown', {\n        'dropdown--active': isActive,\n        'dropdown--error': hasError,\n      })}\n      ref={dropdownRef}\n    >\n      <button\n        type=\"button\"\n        onClick={() => {\n          setIsActive(!isActive);\n        }}\n        className={classNames('dropdown__btn', {\n          [className]: className,\n        })}\n      >\n        <span className=\"dropdown__btn-text\">{selectedOption}</span>\n\n        <svg\n          className={classNames('dropdown__svg', {\n            'dropdown__svg--active': isActive,\n          })}\n          width=\"14\"\n          height=\"9\"\n          viewBox=\"0 0 14 9\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M1 1.5L7 7.5L13 1.5\"\n            stroke=\"#036\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n          />\n        </svg>\n      </button>\n      <ul\n        className={classNames('dropdown__content', {\n          [contentClassName]: contentClassName,\n        })}\n        style={{ display: isActive ? 'flex' : 'none' }}\n      >\n        {options.map(item => (\n          <button\n            key={item}\n            type=\"button\"\n            className=\"dropdown__item\"\n            onClick={() => {\n              setIsActive(false);\n              onSelect(item);\n            }}\n          >\n            {item}\n          </button>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Pagination.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const links = [];\n\n  if (total <= perPage) {\n    return null;\n  }\n\n  function prevLinkHandler() {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  }\n\n  function nextLinkHandler() {\n    if (currentPage === totalPages) {\n      return;\n    }\n\n    onPageChange(currentPage + 1);\n  }\n\n  for (let i = 1; i <= totalPages; i += 1) {\n    links.push(\n      <li className=\"pagination__item\" key={i}>\n        <button\n          className={classNames('pagination__link', {\n            'pagination__link--active': currentPage === i,\n          })}\n          onClick={() => onPageChange(i)}\n        >\n          {i}\n        </button>\n      </li>,\n    );\n  }\n\n  return (\n    <div\n      className={classNames('pagination', {\n        'pagination--hidden': totalPages === 1,\n      })}\n    >\n      <button\n        className=\"pagination__button\"\n        onClick={prevLinkHandler}\n        disabled={currentPage === 1}\n      >\n        &lt; Попередня\n      </button>\n      <ol className=\"pagination__list\">{links}</ol>\n\n      <button\n        className=\"pagination__button\"\n        onClick={nextLinkHandler}\n        disabled={currentPage === totalPages}\n      >\n        Наступна &gt;\n      </button>\n    </div>\n  );\n};\n","/* eslint-disable max-len */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport './CheckboxVendor.scss';\n\ntype Props = {\n  title: string;\n  checked: boolean;\n  onChange: () => void;\n};\n\nexport const CheckboxVendor: React.FC<Props> = ({\n  title,\n  checked,\n  onChange,\n}) => {\n  const svg = checked ? (\n    <svg\n      width=\"18\"\n      height=\"19\"\n      viewBox=\"0 0 18 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6 8.5L9 11.5L17 3.5\"\n        stroke=\"#036\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M17 9.5V15.5C17 16.0304 16.7893 16.5391 16.4142 16.9142C16.0391 17.2893 15.5304 17.5 15 17.5H3C2.46957 17.5 1.96086 17.2893 1.58579 16.9142C1.21071 16.5391 1 16.0304 1 15.5V3.5C1 2.96957 1.21071 2.46086 1.58579 2.08579C1.96086 1.71071 2.46957 1.5 3 1.5H12\"\n        stroke=\"#036\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  ) : (\n    <svg\n      width=\"18\"\n      height=\"19\"\n      viewBox=\"0 0 18 19\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17 9.5C17 11.8431 17 15.5 17 15.5C17 16.0304 16.7893 16.5391 16.4142 16.9142C16.0391 17.2893 15.5304 17.5 15 17.5H3C2.46957 17.5 1.96086 17.2893 1.58579 16.9142C1.21071 16.5391 1 16.0304 1 15.5V3.5C1 2.96957 1.21071 2.46086 1.58579 2.08579C1.96086 1.71071 2.46957 1.5 3 1.5H15\"\n        stroke=\"black\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n\n  return (\n    <label className=\"checkbox-vendor\">\n      <input\n        className=\"checkbox-vendor__input\"\n        type=\"checkbox\"\n        onChange={onChange}\n      />\n\n      <div className=\"checkbox-vendor__content\">\n        {title}\n\n        {svg}\n      </div>\n    </label>\n  );\n};\n","export enum SortValues {\n  price = 'Ціна від найменшої',\n  rating = 'З найвищим рейтингом',\n}\n","/* eslint-disable max-len */\nimport { useEffect, useMemo, useState } from 'react';\nimport { Card } from '../../components/Card/Card';\nimport { Checkbox } from '../../components/Checkbox/Checkbox';\nimport { CheckboxVendor } from '../../components/CheckboxVendor/CheckboxVendor';\nimport { Container } from '../../components/Container/Container';\nimport { Dropdown } from '../../components/Dropdown/Dropdown';\nimport './CatalogPage.scss';\nimport classNames from 'classnames';\nimport { Pagination } from '../../components/Pagination/Pagination';\nimport { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/getSearchWith';\nimport { useAppSelector } from '../../store/hooks';\nimport { SortValues } from '../../types/sortValues';\nimport { Choise } from '../../components/Choise/Choise';\nimport { Drink } from '../../types/Drink';\n\nconst CatalogPage: React.FC = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [isRegionsHidden, setIsRegionsHidden] = useState(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const drinksFromServer = useAppSelector(state => state.drinks.drinks);\n  const volumesFromServer = useAppSelector(state => state.volumes.volumes);\n  const categoriesFromServer = useAppSelector(\n    state => state.categories.categories,\n  );\n  const vendorsFromServer = useAppSelector(state => state.producers.producers);\n  const regionsFromServer = useAppSelector(state => state.regions.regions);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function setSearchWith(params: any) {\n    const search = getSearchWith(params, searchParams);\n\n    setSearchParams(search);\n  }\n\n  const volumeFilters = useMemo(\n    () => searchParams.getAll('volume') || [],\n    [searchParams],\n  );\n  const vendorFilters = useMemo(\n    () => searchParams.getAll('vendor') || [],\n    [searchParams],\n  );\n  const regionFilters = useMemo(\n    () => searchParams.getAll('region') || [],\n    [searchParams],\n  );\n  const categoryFilters = useMemo(\n    () => searchParams.getAll('category') || [],\n    [searchParams],\n  );\n\n  const query = searchParams.get('query') || '';\n\n  const sortBy = searchParams.get('sort') || SortValues.price;\n\n  const clearFilters = () => setSearchParams('');\n\n  const toggleCategory = (name: string) => {\n    const newCategories = categoryFilters.includes(name)\n      ? categoryFilters.filter(category => name !== category)\n      : [...categoryFilters, name];\n\n    setSearchWith({ category: newCategories });\n  };\n\n  const toggleVolume = (name: string) => {\n    const newVolumes = volumeFilters.includes(name)\n      ? volumeFilters.filter(volume => name !== volume)\n      : [...volumeFilters, name];\n\n    setSearchWith({ volume: newVolumes });\n  };\n\n  const toggleVendor = (name: string) => {\n    const newVendros = vendorFilters.includes(name)\n      ? vendorFilters.filter(vendor => name !== vendor)\n      : [...vendorFilters, name];\n\n    setSearchWith({ vendor: newVendros });\n  };\n\n  const toggleRegion = (name: string) => {\n    const newRegions = regionFilters.includes(name)\n      ? regionFilters.filter(region => name !== region)\n      : [...regionFilters, name];\n\n    setSearchWith({ region: newRegions });\n  };\n\n  const handleAddRegionClick = () => setIsRegionsHidden(false);\n\n  const preparedRegions = [...regionsFromServer].sort((reg1, reg2) => {\n    if (\n      regionFilters.includes(reg2.name) &&\n      !regionFilters.includes(reg1.name)\n    ) {\n      return 1;\n    } else if (\n      regionFilters.includes(reg1.name) &&\n      !regionFilters.includes(reg2.name)\n    ) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n\n  const onFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    setSearchWith({ query: inputValue });\n  };\n\n  function sortGoods(sortValue: SortValues) {\n    switch (sortValue) {\n      case SortValues.price:\n        return (drink1: Drink, drink2: Drink): number =>\n          +drink1.price - +drink2.price;\n\n      case SortValues.rating:\n        return (drink1: Drink, drink2: Drink): number =>\n          drink2.rating - drink1.rating;\n    }\n  }\n\n  const dropdownOptions = Object.values(SortValues);\n\n  const preparedItems = useMemo(() => {\n    return [...drinksFromServer]\n      .filter(\n        item =>\n          item.name.toLowerCase().includes(query.toLowerCase()) ||\n          item.producer.name.toLowerCase().includes(query.toLowerCase()),\n      )\n      .filter(item =>\n        volumeFilters.length\n          ? volumeFilters.includes(`${item.volume.name}`)\n          : true,\n      )\n      .filter(item =>\n        regionFilters.length\n          ? regionFilters.includes(`${item.region.name}`)\n          : true,\n      )\n      .filter(item =>\n        categoryFilters.length\n          ? categoryFilters.includes(`${item.drink_type.name}`)\n          : true,\n      )\n      .filter(item =>\n        vendorFilters.length\n          ? vendorFilters.includes(`${item.producer.name}`)\n          : true,\n      )\n      .sort(sortGoods(sortBy as SortValues));\n  }, [\n    drinksFromServer,\n    sortBy,\n    query,\n    volumeFilters,\n    regionFilters,\n    categoryFilters,\n    vendorFilters,\n  ]);\n\n  const page = Number(searchParams.get('page')) || 1;\n  const itemsPerPage = 9;\n  const total = preparedItems.length;\n  const firstItem = (page - 1) * itemsPerPage;\n  const lastItem =\n    firstItem + itemsPerPage < total ? firstItem + itemsPerPage : total;\n\n  const slicedItems = preparedItems.slice(firstItem, lastItem);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [page]);\n\n  if (total <= itemsPerPage && page !== 1) {\n    setSearchWith({ page: null });\n  }\n\n  return (\n    <div className=\"catalog\">\n      <Container classes={['catalog__container']}>\n        <h2 className=\"catalog__title\">ПІДБЕРЕМО НАЙКРАЩЕ!</h2>\n\n        <form className=\"catalog__input-wrapper\" onSubmit={onFormSubmit}>\n          <div className=\"catalog__input-label\">\n            <input\n              className=\"catalog__input\"\n              type=\"text\"\n              placeholder=\"Пошук\"\n              value={inputValue}\n              onChange={e => setInputValue(e.target.value)}\n            />\n\n            <button\n              type=\"button\"\n              className=\"catalog__input-clear\"\n              disabled={inputValue.length === 0}\n              onClick={() => setInputValue('')}\n            >\n              <svg\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  className=\"catalog__input-svg\"\n                  d=\"M1 1L8 8M8 8L15 1M8 8L1 15M8 8L15 15\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                />\n              </svg>\n            </button>\n          </div>\n          <button\n            className=\"catalog__input-button\"\n            aria-label=\"search button\"\n            type=\"submit\"\n          >\n            <svg\n              width=\"25\"\n              height=\"24\"\n              viewBox=\"0 0 25 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M21.988 21L17.6273 16.657M17.6273 16.657C18.3733 15.9141 18.9649 15.0322 19.3686 14.0615C19.7723 13.0909 19.9801 12.0506 19.9801 11C19.9801 9.94939 19.7723 8.90908 19.3686 7.93845C18.965 6.96782 18.3733 6.08588 17.6273 5.34299C16.8814 4.6001 15.9959 4.01081 15.0213 3.60877C14.0467 3.20672 13.0022 2.99979 11.9473 2.99979C10.8924 2.99979 9.84789 3.20672 8.87331 3.60877C7.89873 4.01081 7.01321 4.6001 6.26729 5.34299C4.76086 6.84332 3.91455 8.87821 3.91455 11C3.91455 13.1218 4.76086 15.1567 6.26729 16.657C7.77373 18.1573 9.8169 19.0002 11.9473 19.0002C14.0777 19.0002 16.1209 18.1573 17.6273 16.657Z\"\n                stroke=\"white\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </button>\n        </form>\n\n        <div className=\"catalog__wrapper\">\n          <div className=\"catalog__settings\">\n            <div className=\"catalog__settings-block\">\n              <h3 className=\"catalog__settings-title\">КАТЕГОРІЇ</h3>\n\n              <div className=\"catalog__checkboxes\">\n                {categoriesFromServer.map(cat => (\n                  <Checkbox\n                    title={cat.name}\n                    key={cat.id}\n                    checked={categoryFilters.includes(cat.name)}\n                    onChange={() => toggleCategory(cat.name)}\n                  />\n                ))}\n              </div>\n            </div>\n\n            <div className=\"catalog__settings-block\">\n              <h3 className=\"catalog__settings-title\">Сортування</h3>\n\n              <div className=\"catalog__settings-group\">\n                <h4 className=\"catalog__settings-group-title\">\n                  Спершу показувати\n                </h4>\n\n                <Dropdown\n                  options={dropdownOptions}\n                  onSelect={value => {\n                    if (value === SortValues.price) {\n                      setSearchWith({ sort: null });\n                    } else {\n                      setSearchWith({ sort: value });\n                    }\n                  }}\n                  selectedOption={sortBy}\n                />\n              </div>\n            </div>\n\n            <div className=\"catalog__settings-block\">\n              <h3 className=\"catalog__settings-title catalog__settings-title--small-margin\">\n                Фільтри\n              </h3>\n\n              <button\n                className=\"catalog__clear-filters\"\n                onClick={() => clearFilters()}\n              >\n                Очистити фільтри\n              </button>\n\n              <div className=\"catalog__settings-groups\">\n                <div className=\"catalog__settings-group\">\n                  <h4 className=\"catalog__settings-group-title\">\n                    Область виробництва\n                  </h4>\n\n                  <div className=\"catalog__checkboxes\">\n                    <p\n                      className={classNames('catalog__add-title', {\n                        'catalog__add-title--hidden': isRegionsHidden,\n                      })}\n                    >\n                      Додати\n                    </p>\n\n                    {preparedRegions.map(region => (\n                      <Checkbox\n                        title={region.name}\n                        key={region.id}\n                        checked={regionFilters.includes(region.name)}\n                        isHidden={isRegionsHidden}\n                        onChange={() => toggleRegion(region.name)}\n                      />\n                    ))}\n\n                    <button\n                      className={classNames('catalog__add-region', {\n                        'catalog__add-region--hidden': !isRegionsHidden,\n                      })}\n                      onClick={handleAddRegionClick}\n                    >\n                      Додати\n                      <svg\n                        width=\"11\"\n                        height=\"11\"\n                        viewBox=\"0 0 11 11\"\n                        fill=\"none\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          d=\"M5.24264 1.25736L5.24264 5.5M5.24264 5.5L9.48528 5.5M5.24264 5.5L1 5.5M5.24264 5.5L5.24264 9.74264\"\n                          stroke=\"#0f1720\"\n                          strokeWidth=\"1.5\"\n                          strokeLinecap=\"round\"\n                        />\n                      </svg>\n                    </button>\n                  </div>\n\n                  <button\n                    className={classNames('catalog__regions-hide', {\n                      'catalog__regions-hide--hidden': isRegionsHidden,\n                    })}\n                    onClick={() => setIsRegionsHidden(true)}\n                  >\n                    Приховати\n                  </button>\n                </div>\n\n                <div className=\"catalog__settings-group\">\n                  <h4 className=\"catalog__settings-group-title\">Об’єм</h4>\n\n                  <div className=\"catalog__checkboxes\">\n                    {volumesFromServer.map(volume => (\n                      <Checkbox\n                        title={volume.name}\n                        key={volume.id}\n                        checked={volumeFilters.includes(volume.name)}\n                        onChange={() => toggleVolume(volume.name)}\n                      />\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"catalog__settings-group\">\n                  <h4 className=\"catalog__settings-group-title\">Виробники</h4>\n\n                  <div className=\"catalog__settings-vendors\">\n                    {vendorsFromServer.map(vendor => (\n                      <CheckboxVendor\n                        key={vendor.id}\n                        title={vendor.name}\n                        checked={vendorFilters.includes(vendor.name)}\n                        onChange={() => toggleVendor(vendor.name)}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"catalog__content\">\n            <h2 className=\"catalog__content-title\">Результати пошуку</h2>\n\n            <div className=\"catalog__results\">\n              <>\n                {preparedItems.length === 0 ? (\n                  <div className=\"catalog__no-results\">\n                    Збігів не знайдено. Спробуйте ввести запит інакше\n                  </div>\n                ) : (\n                  <div className=\"catalog__results-title\">\n                    <span>Знайдено результатів за вашим запитом:</span>\n\n                    <span>{preparedItems.length}</span>\n                  </div>\n                )}\n              </>\n\n              <div className=\"catalog__cards\">\n                {slicedItems.map(item => (\n                  <Card\n                    key={item.id}\n                    product={item}\n                    classname=\"catalog__card\"\n                  />\n                ))}\n              </div>\n            </div>\n\n            <Pagination\n              total={total}\n              perPage={itemsPerPage}\n              currentPage={page}\n              onPageChange={newPage => {\n                if (newPage === 1) {\n                  setSearchWith({ page: null });\n                } else {\n                  setSearchWith({ page: newPage });\n                }\n              }}\n            />\n          </div>\n        </div>\n\n        <Choise className=\"catalog__choise\" />\n      </Container>\n    </div>\n  );\n};\n\nexport default CatalogPage;\n","type Param = string | number;\ntype Params = {\n  [key: string]: Param[] | Param | null;\n};\n\nexport function getSearchWith(\n  params: Params,\n  search?: string | URLSearchParams,\n) {\n  const newParams = new URLSearchParams(search);\n\n  for (const [key, value] of Object.entries(params)) {\n    if (value === null || value === '') {\n      newParams.delete(key);\n    } else if (Array.isArray(value)) {\n      newParams.delete(key);\n      value.forEach(item => newParams.append(key, item.toString()));\n    } else {\n      newParams.set(key, value.toString());\n    }\n  }\n\n  return newParams.toString();\n}\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}","import _typeof from \"./typeof.js\";\nexport default function toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Checkbox","_ref","title","_ref$isHidden","isHidden","checked","hasError","onChange","isCheckboxHidden","_jsxs","className","classNames","children","_jsx","type","Dropdown","options","selectedOption","onSelect","_ref$className","_ref$contentClassName","contentClassName","_useState","useState","_useState2","_slicedToArray","isActive","setIsActive","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","onClick","_defineProperty","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","style","display","map","item","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","links","_loop","i","push","disabled","CheckboxVendor","svg","strokeLinejoin","SortValues","inputValue","setInputValue","_useState3","_useState4","isRegionsHidden","setIsRegionsHidden","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","drinksFromServer","useAppSelector","state","drinks","volumesFromServer","volumes","categoriesFromServer","categories","vendorsFromServer","producers","regionsFromServer","regions","setSearchWith","params","search","getSearchWith","volumeFilters","useMemo","getAll","vendorFilters","regionFilters","categoryFilters","query","get","sortBy","price","preparedRegions","_toConsumableArray","sort","reg1","reg2","includes","name","dropdownOptions","Object","values","preparedItems","filter","toLowerCase","producer","length","concat","volume","region","drink_type","sortValue","drink1","drink2","rating","sortGoods","page","Number","firstItem","lastItem","slicedItems","slice","window","scrollTo","Container","classes","onSubmit","e","preventDefault","placeholder","value","cat","category","id","vendor","_Fragment","Card","product","classname","newPage","Choise","newParams","URLSearchParams","_Object$entries$_i","_Object$entries","_i","key","Array","isArray","forEach","append","toString","set","entries","_typeof","o","Symbol","iterator","constructor","prototype","obj","t","r","toPrimitive","call","TypeError","String","defineProperty","enumerable","configurable","writable","arr","arrayLikeToArray","iter","from","unsupportedIterableToArray"],"sourceRoot":""}